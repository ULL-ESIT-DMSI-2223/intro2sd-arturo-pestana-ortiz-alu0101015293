<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/feed.xml" rel="self" type="application/atom+xml" /><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/" rel="alternate" type="text/html" /><updated>2023-01-21T13:22:37-05:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/feed.xml</id><title type="html">Introducción al Desarrollo de Sistemas</title><subtitle>Una web creada como prueba para la asignatura DMSI</subtitle><author><name>Arturo Pestana</name></author><entry><title type="html">Post: Future Date</title><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post/post-future-date/" rel="alternate" type="text/html" title="Post: Future Date" /><published>9999-12-31T00:00:00-05:00</published><updated>9999-12-31T00:00:00-05:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post/post-future-date</id><content type="html" xml:base="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post/post-future-date/">&lt;p&gt;This post lives in the future and is dated Fri Dec 31 00:00:00 9999. When building Jekyll with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--future&lt;/code&gt; flag it should appear.&lt;/p&gt;</content><author><name>Arturo Pestana</name></author><category term="Post" /><summary type="html">This post lives in the future and is dated Fri Dec 31 00:00:00 9999. When building Jekyll with the --future flag it should appear.</summary></entry><entry><title type="html">Informe práctica: implementación del search</title><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/informe2/" rel="alternate" type="text/html" title="Informe práctica: implementación del search" /><published>2023-01-09T00:00:00-05:00</published><updated>2023-01-09T00:00:00-05:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/informe2</id><content type="html" xml:base="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/informe2/">&lt;h2 id=&quot;guardar-cambios-de-la-anterior-práctica&quot;&gt;Guardar cambios de la anterior práctica&lt;/h2&gt;
&lt;p&gt;Antes de empezar la práctica de implementación del search, se ha creado una rama con el nombre de &lt;em&gt;intro2sd&lt;/em&gt; para allí guardar lo que se había hecho en la anterior práctica. Haciendo esto, lo que hacemos es realizar la segunda práctica en la rama main.&lt;/p&gt;

&lt;h2 id=&quot;creación-de-los-ficheros-necesarios&quot;&gt;Creación de los ficheros necesarios&lt;/h2&gt;
&lt;p&gt;Para esta práctica se crearán 3 ficheros: search.md, search.json y search.js.&lt;/p&gt;

&lt;h2 id=&quot;archivo-searchmd&quot;&gt;Archivo search.md&lt;/h2&gt;
&lt;p&gt;Se encarga de mostrar los resultados de búsqueda. Para realizar esto, crearemos una &lt;em&gt;page&lt;/em&gt; que mostrará los resultados de la búsqueda mediante el uso de un formulario, con un campo de búsqueda y un contenedor en el que se mostrarán los resultados.&lt;/p&gt;

&lt;p&gt;En el formulario se crea un evento que se encarga de llamar a la función &lt;em&gt;init()&lt;/em&gt; de la clase &lt;strong&gt;JekyllSearch&lt;/strong&gt;.&lt;/p&gt;

&lt;image src=&quot;/assets/images/searchmd.png&quot; alt=&quot;fichero search.md&quot;&gt;

## Archivo search.json
Se encarga de generar el fichero json. Para ello, recorremos todas las colecciones de nuestro sitio web y todos los ficheros html que no estén dentro de una colección y tengan un título.

Para cada una de estas páginas y colecciones, se crea un objeto JSON con el título de la misma, un resumen, el contenido y la URL. Todo el contenido se genera en una variable llamada *json* que se imprime en la web.

&lt;image src=&quot;/assets/images/searchjson.png&quot; alt=&quot;fichero search.json&quot;&gt;

## Archivo search.js
Se encarga de la lógica de las búsquedas. Creamos una clase que se encarga de buscar en el JSON. Para poder hacer esto, necesitamos crear un objeto con los parámetros necesarios para la búsqueda, siendo en este caso el JSON generado, el campo de búsqueda y el contenedor donde se muestran los resultados. Es necesarios la URL del sitio web para generar los enlaces a lso resultados.

&lt;image src=&quot;/assets/images/searchjs.png&quot; alt=&quot;fichero search.js&quot;&gt;
&lt;/image&gt;&lt;/image&gt;&lt;/image&gt;</content><author><name>Arturo Pestana</name></author><category term="Post Formats" /><summary type="html">Guardar cambios de la anterior práctica Antes de empezar la práctica de implementación del search, se ha creado una rama con el nombre de intro2sd para allí guardar lo que se había hecho en la anterior práctica. Haciendo esto, lo que hacemos es realizar la segunda práctica en la rama main. Creación de los ficheros necesarios Para esta práctica se crearán 3 ficheros: search.md, search.json y search.js. Archivo search.md Se encarga de mostrar los resultados de búsqueda. Para realizar esto, crearemos una page que mostrará los resultados de la búsqueda mediante el uso de un formulario, con un campo de búsqueda y un contenedor en el que se mostrarán los resultados. En el formulario se crea un evento que se encarga de llamar a la función init() de la clase JekyllSearch. ## Archivo search.json Se encarga de generar el fichero json. Para ello, recorremos todas las colecciones de nuestro sitio web y todos los ficheros html que no estén dentro de una colección y tengan un título. Para cada una de estas páginas y colecciones, se crea un objeto JSON con el título de la misma, un resumen, el contenido y la URL. Todo el contenido se genera en una variable llamada *json* que se imprime en la web. ## Archivo search.js Se encarga de la lógica de las búsquedas. Creamos una clase que se encarga de buscar en el JSON. Para poder hacer esto, necesitamos crear un objeto con los parámetros necesarios para la búsqueda, siendo en este caso el JSON generado, el campo de búsqueda y el contenedor donde se muestran los resultados. Es necesarios la URL del sitio web para generar los enlaces a lso resultados.</summary></entry><entry><title type="html">Resumen tema 2 Developing Information Systems</title><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/resument2/" rel="alternate" type="text/html" title="Resumen tema 2 Developing Information Systems" /><published>2023-01-09T00:00:00-05:00</published><updated>2023-01-09T00:00:00-05:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/resument2</id><content type="html" xml:base="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/resument2/">&lt;h2 id=&quot;las-principales-etapas-del-desarollo-del-sistema&quot;&gt;&lt;strong&gt;Las principales etapas del desarollo del sistema&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Las etapas se definen como:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Estudio de factibilidad:&lt;/strong&gt; El estudio de factibilidad involucra investigación e investigación para evaluar el potencial de éxito del proyecto para apoyar la toma de decisiones. Tal estudio se ocupa de comprender objetivamente los recursos y costos involucrados y sopesarlos contra el valor que se obtendrá luego de la finalización del proyecto o sistema. Esto se llama retorno de la inversión (ROI) y solo se apoyarán aquellos proyectos y sistemas que devuelvan un ROI razonable.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ingeniería de requisitos:&lt;/strong&gt; Esta etapa tiene como objetivo asegurar la comprensión de lo que la empresa necesita que haga el sistema propuesto. Los requisitos producidos durante esta etapa se convierten en la entrada para el diseño del sistema y así es fundamental que los requisitos se puedan rastrear hasta el final a través del ciclo de vida de desarrollo del sistema desde la fuente hasta implementación. La cantidad de detalles de requisitos capturados cuándo y dónde durante la ingeniería de requisitos se puede afectados por el enfoque del ciclo de vida a seguir.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Diseño:&lt;/strong&gt; En la etapa de diseño, las posibles soluciones que cumplan con los requisitos se consideran y sopesan contra cada otro. El diseño elegido se elabora luego con suficiente detalle para permitir que los desarrolladores lo implementen.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Desarrollo (programación):&lt;/strong&gt; El desarrollo es la fase en la que se crean, adquieren o configuran los componentes técnicos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Pruebas:&lt;/strong&gt; Durante las pruebas, los componentes producidos durante el desarrollo se prueban para asegurarse de que funcionan correctamente y que el sistema hace lo que se supone que debe hacer. Hay diferentes niveles de pruebas, incluidas las pruebas unitarias, las pruebas de componentes, pruebas del sistema y pruebas de aceptación.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Implementación:&lt;/strong&gt; Antes de que un sistema de TI esté listo para usarse, debe ponerse en marcha en el entorno ‘en vivo’ u ‘operativo’. Hasta este punto en el desarrollo de un sistema, se puede haber utilizado un entorno de referencia o de prueba para proteger otros sistemas de fallas dentro del nuevo sistema.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;los-principales-elementos-que-componene-el-ciclo-de-desarrollo-de-sistemas&quot;&gt;&lt;strong&gt;Los principales elementos que componene el ciclo de desarrollo de sistemas&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Los elementos que componen el ciclo de desarrollo de sistemas son:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Contexto:&lt;/strong&gt; Es el entorno en el que se desarrolla el proyecto, que es necesario comprender en su totalidad para saber como puede afectar al desarrollo de nuestro sistema.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ciclo de vida:&lt;/strong&gt; Describe las etapas que normalmente seguiremos para planificar, diseñar, construir, probar y entregar sistemas de información.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Proceso:&lt;/strong&gt; Es el conjunto de actividades que se llevan a cabo en cada fase del ciclo de vida para generar un determinado output.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Roles:&lt;/strong&gt; Para avanzar a través de un SDLC, es imperativo que haya personas que puedan llevar a cabo las tareas requeridas. Muchos enfoques de desarrollo de sistemas describen los roles necesarios para nosotros.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Entregables:&lt;/strong&gt; Son los documentos, modelos, diseños y componentes de hardware o software que se requieren durante las diferentes etapas del SDLC. Lo importante a recordar es que muchos de los entregables son una forma de detallar lo que se entiende sobre el sistema en términos de lo que debe hacer, cómo debe hacerlo, qué tan bien lo hace y cómo se entrega.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Técnicas:&lt;/strong&gt; Hay una gran cantidad de técnicas que se pueden adoptar durante el desarrollo de un sistema. Los específicos que se usan varían según las preferencias del equipo y la organización, la elección del ciclo de vida y el enfoque de desarrollo del sistema seleccionado.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A lo largo de los años, se han creado muchos ciclos de vida de desarrollo y, en algunos casos, se han comercializado. Cada uno tiene sus fortalezas y debilidades, y algunos funcionan mejor para algunos tipos de sistemas y proyectos que otros.&lt;/p&gt;

&lt;p&gt;Sin embargo, es importante enfatizar que seguir ciegamente un SDLC sin considerar el contexto o el enfoque de desarrollo del sistema podría resultar en el fracaso del proyecto. Cada proyecto de desarrollo de sistema es diferente en términos de escala y complejidad y, por lo tanto, el enfoque de ciclo de vida utilizado a menudo se beneficiará de la adaptación.&lt;/p&gt;

&lt;h2 id=&quot;lo-que-queremos-decir-con-ciclo-de-vida-de-desarrollo-del-sistema&quot;&gt;&lt;strong&gt;Lo que queremos decir con ‘ciclo de vida de desarrollo del sistema’&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Hoy en día se utilizan mucos ciclos de vida de desarrollo de sistemas diferentes. Sin embargo, están respaldados por solo cino ciclos de vida básicos y dos enfoques.&lt;/p&gt;

&lt;p&gt;Los primeros elementos fundamentales describen si un ciclo de vida es lienal o evolutivo:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Un &lt;strong&gt;enfoque lineal&lt;/strong&gt; describe una secuencia de tareas que se completan en orden, solo se mueve al siguiente paso una vez que se completa el paso anterior. En sistemas grandes y complejos, donde el desarrollo se distribuye o se subcontrata, un enfoque lineal ayuda a controlar el costo y el alcance, y permite que el desarrollo se divida entre los proveedores. Para proyectos más pequeños, un enfoque lineal puede ser simple de implementar, ya que los pasos se suceden lógicamente y pueden ser entendidos fácilmente por un equipo pequeño.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Un &lt;strong&gt;enfoque evolutivo&lt;/strong&gt; evoluciona la solución a través de versiones progresivas, cada uno más comleto que el anterior, y a menudo utiliza un enfoque de creación de prototipos para desarrollo. El desarrollo evolutivo es ideal para nuevos productos, que pueden ser proyectos de innovación o desarrollos de campo verde, donde a los usuarios les resulta difícil expresar sus requisitos. El uso de este enfoque permite que el sistema evolucione, descubriendo más y más comprensión a través de la demostración del software en funcionamiento hasta que se alcance la solución.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ciclos-de-vida-basados-en-el-enfoque-lineal&quot;&gt;&lt;strong&gt;Ciclos de vida basados en el enfoque lineal&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;cascada&quot;&gt;&lt;strong&gt;Cascada&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;El ciclo de vida lineal más común es ‘Cascada’. Este fue uno de los primeros ciclos de vida introducidos en la década de 1970 y todavía tiene mucho peso y valor en la actualidad.&lt;/p&gt;

&lt;p&gt;Los principios detrás de Waterfall son que cada paso debe completarse antes de pasar al siguiente paso. Completar los pasos de esta manera garantiza que el sistema se entienda bien a través de la revisión y la documentación formal y, por lo tanto, debe conducir a un producto de calidad. Además, en caso de que haya un problema en una fase, hay que volver a empezar en la fase anterior para intentar corregirlo.&lt;/p&gt;

&lt;h3 id=&quot;el-modelo-v&quot;&gt;&lt;strong&gt;El modelo ‘V’&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;El modelo ‘V’ se introdujo casi como una extensión del modelo Waterfall para abordar el problema por el cual el tiempo asignado a las pruebas a menudo podía reducirse durante un proyecto Waterfall si el tiempo y el dinero comenzaban a agotarse.&lt;/p&gt;

&lt;p&gt;Esto hace una distinción entre las actividades en el lado izquierdo de la ‘V’ (definición del proyecto) y el lado derecho de la ‘V’ (verificación y validación). Por lo tanto, la parte inferior de la ‘V’ es el desarrollo real que se lleva a cabo para traducir la definición del proyecto en un software funcional que se puede verificar y validar.&lt;/p&gt;

&lt;p&gt;Por esta razón, el modelo ‘V’ es particularmente bueno para los sistemas críticos para la seguridad en los que todavía se prevé una sola versión del sistema, pero la alta calidad y la seguridad son fundamentales. El diseño de etapas, particularmente la separación del diseño de alto nivel y el diseño de unidades/componentes, y la inclusión de ‘pruebas de integración’ se prestan bien a problemas complejos donde hay múltiples equipos o proveedores involucrados en la etapa de desarrollo.&lt;/p&gt;

&lt;h3 id=&quot;ciclo-de-vida-incremental&quot;&gt;&lt;strong&gt;Ciclo de vida incremental&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Donde el ciclo de vida incremental difiere del modelo en cascada o ‘V’ es que después de comprender y diseñar completamente el sistema, se pueden tomar decisiones para entregar algunas partes del sistema antes que otras partes. Esto permite que los requisitos de alta prioridad se entreguen primero, entregando así elementos de funcionalidad al cliente o al negocio de manera temprana. Los incrementos se pueden entregar en paralelo, ya que el diseño central está completo.&lt;/p&gt;

&lt;p&gt;Es ideal donde se requiere una capacidad temprana, tal vez para un rápido tiempo de comercialización, pero donde la arquitectura central es estable. También es útil cuando la funcionalidad requerida es clara, pero hay opciones sobre qué aspecto es más importante entregar primero. Debido a que el diseño del sistema de alto nivel es independiente de la orden de entrega, la decisión sobre la orden de entrega se puede dejar para un momento más cercano.&lt;/p&gt;

&lt;h2 id=&quot;ciclos-de-vida-basados-en-el-enfoque-evolutivo&quot;&gt;&lt;strong&gt;Ciclos de vida basados en el enfoque evolutivo&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;desarrollo-iterativo&quot;&gt;&lt;strong&gt;Desarrollo iterativo&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;El desarrollo iterativo es un ciclo de vida en el que el proyecto general se compone de varios desarrollos pequeños con plazos determinados, llamados iteraciones, que tienen lugar en secuencia. Cada iteración es un mini proyecto autónomo compuesto por actividades como requisitos, análisis, diseño, desarrollo y prueba; en este sentido, pueden parecerse un poco a proyectos mini-lineales. Los requisitos se obtienen durante cada iteración y se desarrollan para producir un sistema de trabajo que brinde algún valor al proyecto o al cliente. En proyectos grandes, esto podría ser un equipo múltiple que trabaje en la misma iteración.&lt;/p&gt;

&lt;p&gt;Se podría decir que hay un mínimoo de 3 iterations necesarias:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Investigación:&lt;/strong&gt; en esta iteración se realiza una investigación sobre el proyecto y se realiza un análisis de riesgos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Refinamiento:&lt;/strong&gt; en esta iteración se realiza un análisis más dettllado del proyecto y se realizan los requisitos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Consolidación:&lt;/strong&gt; en esta iteración se realiza la implementación y el testeo.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Los ciclos de vida iterativos son buenos cuando los problemas o las soluciones no están claros desde el principio, o cuando la empresa aún no sabe si quiere financiar el proyecto. Las primeras iteraciones pueden dar mayor claridad sobre lo que es factible y cuánto puede costar. También es un enfoque muy adecuado para la creación de prototipos, probar el mercado o probar nuevas tecnologías.&lt;/p&gt;

&lt;h3 id=&quot;espiral&quot;&gt;&lt;strong&gt;Espiral&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;El modelo Espiral combina el desarrollo iterativo con la creación de prototipos para probar la comprensión y hacer evolucionar los requisitos para que los riesgos puedan abordarse en todo momento. No necesita requisitos que se definan de antemano. Este enfoque comienza con un concepto y revisa repetidamente las cuatro fases principales de desarrollo hasta que se completa un producto de trabajo adecuado.&lt;/p&gt;

&lt;p&gt;Las fases del ciclo de vida son:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Determinar los objetivos:&lt;/strong&gt; El equipo de desarrollo y los dueños de negocios identifican los objetivos para el desarrollo y acuerdan la priorización de los requisitos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Identificar y resolver los riesgos:&lt;/strong&gt; Los desarrolladores exploran las posibilidades técnicas para cumplir con el objetivo comercial y evalúan los riesgos que la tecnología puede traer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Desarrollo y pruebas:&lt;/strong&gt; La revisión de los prototipos permite al equipo de desarrollo evaluar qué tan bien se abordaron los requisitos y los riesgos y buscar mejoras.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Planificación de la siguiente iteración:&lt;/strong&gt; El sistema de trabajo se libera en el entorno operativo en vivo.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;el-impacto-de-ágil&quot;&gt;&lt;strong&gt;El impacto de Ágil&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Ágil es un término popular que ahora se le da a los enfoques de desarrollo evolutivo siguiendo el ‘Manifiesto Ágil’ en 2001. El Manifiesto Ágil condujo a una forma completamente nueva de pensar sobre el desarrollo de software y surgió una nueva moda en los métodos, procesos y ciclos de vida de desarrollo Ágil.&lt;/p&gt;

&lt;p&gt;Los ciclos de vida lineales como Waterfall, el modelo ‘V’ e Incremental cayeron en desgracia en lugar de enfoques más evolutivos como Scrum y Agile Unified Process (AgileUp).&lt;/p&gt;

&lt;h2 id=&quot;enfoques-y-métodos-de-desarrollo&quot;&gt;&lt;strong&gt;Enfoques y métodos de desarrollo&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;ssadm&quot;&gt;&lt;strong&gt;SSADM&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;El método SSADM &lt;em&gt;(Structured Systems Analysis and Design Methodology)&lt;/em&gt; implica la aplicación de una secuencia de tareas de análisis, documentación y diseño relacionados con las siguientes etapas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Etapa 0 - Estudio de la viabilidad&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Etapa 1 - Investigación de la situación actual&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Etapa 2 - Opciones del sistema de negocios&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Etapa 3 - Requisitos de especificación&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Etapa 4 - Opciones técnicas del sistema&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Etapa 5 - Diseño lógico&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Etapa 6 - Diseño físico&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El modelado es clave para SSADM y los tres modelos clave son:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Modelo lógico:&lt;/strong&gt; modela los requisitos de datos y las reglas comerciales.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Modelo de flujo de datos:&lt;/strong&gt; modela cómo se mueven los datos en un sistema de información.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Modelo de evento de entidad:&lt;/strong&gt; modela el comportamiento de la entidad, o los datos, y los eventos que hacen que la entidad cambie.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;dsdm&quot;&gt;&lt;strong&gt;DSDM&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;El método DSDM &lt;em&gt;(Dynamic Systems Development Method)&lt;/em&gt; es un enfoque iterativo e incremental evolutivo que fue desarrollado en 1994 como una entrega para apoyar la tendencia hacia el “desarrollo rápido de aplicaciones”.&lt;/p&gt;

&lt;p&gt;El éxito de DSDM se debe a su convicción de que cualquier proyecto debe estar alienado con objetivos estratégicos claramente definidos y centrarse en la entrega temprana. El respaldo de esta filosofía con los &lt;strong&gt;8&lt;/strong&gt; principios permite a los equipos mantener el enfoque y alcanzar los objetivos del proyecto:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Centrarse en la necesidad comercial.&lt;/li&gt;
  &lt;li&gt;Entregar a tiempo.&lt;/li&gt;
  &lt;li&gt;Colaborar.&lt;/li&gt;
  &lt;li&gt;Nunca comprometer la calidad.&lt;/li&gt;
  &lt;li&gt;COnstruir incrementalmente a paritr de cimientos firmes.&lt;/li&gt;
  &lt;li&gt;Desarrollar iterativamente.&lt;/li&gt;
  &lt;li&gt;Comunicarse de forma continua y clara.&lt;/li&gt;
  &lt;li&gt;Demostrar control.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;scrum&quot;&gt;&lt;strong&gt;SCRUM&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Scrum es un proceso iterativo e incremental que sigue un enfoque evolutivo para el desarrollo de sistemas de software. Introduce un lenguaje y conceptos únicos que rigen cómo un pequeño equipo de ingenieros de software multidisciplinarios planifica y supervisa el trabajo. Scrum solo propone tres roles que son:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Propietario del producto:&lt;/strong&gt; representa el negocio y es la voz del cliente.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Equipo de desarrollo:&lt;/strong&gt; equipo multifuncional y autoorganizado que entrega el software funcional.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scrum master:&lt;/strong&gt; persona responsable de eliminar los impedimentos para que el equipo de desarrollo pueda cumplir los objetivos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Las iteraciones se denominan “Sprints” y, por lo general, serán breves y se centrarán en entregar una versión funcional del producto, según se define mediante un acuerdo con el propietario del producto.&lt;/p&gt;

&lt;h3 id=&quot;rup&quot;&gt;&lt;strong&gt;RUP&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;El Proceso Unificado Racional (RUP) es un proceso de ingeniería de software iterativo, evolutivo e incremental, construido sobre los cimientos del modelo Espiral, que asigna y gestiona tareas y responsabilidades de forma disciplinada dentro de una organización desarrollo. Consiste en &lt;strong&gt;4&lt;/strong&gt; fases mayores:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Inicio.&lt;/li&gt;
  &lt;li&gt;Elaboración.&lt;/li&gt;
  &lt;li&gt;Construcción.&lt;/li&gt;
  &lt;li&gt;Transición.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Al ser un proceso de software, RUP es popular entre los equipos de desarrolladores y utiliza uso extensivo de UML para el Análisis y Diseño orientado a onjetos (OOA&amp;amp;D) y el modelado de casos. Esto puede resultar abrumador pero fomenta un diseño sólido y una buena trazabilidad.&lt;/p&gt;

&lt;h3 id=&quot;desarrollo-de-software-esbelto&quot;&gt;&lt;strong&gt;Desarrollo de Software Esbelto&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Este es un conjunto de técnicas y herramientas que se pueden aplicar para eliminar el desperdicio en la fabricación y, por lo tanto, mejorar la productividad. Estos principios son:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Centrarse en los clientes&lt;/li&gt;
  &lt;li&gt;Energizar a los trabajadores&lt;/li&gt;
  &lt;li&gt;Eliminar residuos&lt;/li&gt;
  &lt;li&gt;Aprender rápido&lt;/li&gt;
  &lt;li&gt;Entregar rápido&lt;/li&gt;
  &lt;li&gt;Calidad de construcción en&lt;/li&gt;
  &lt;li&gt;Sigue mejorando&lt;/li&gt;
  &lt;li&gt;Optimizar el conjunto&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Aunque el LSD proporciona herramientas y técnicas, su objetivo es reducir los residuos en el proceso de desarrollo de un producto. No proporciona detalles sobre las etapas que debe seguir o las técnicas de desarrollo que debe usar, ya que espera que ya tenga un enfoque que esté siguiendo. Debido a esto, LSD es un enfoque ideal para combinar con otros métodos o enfoques, como Scrum, por ejemplo.&lt;/p&gt;</content><author><name>Arturo Pestana</name></author><category term="Post Formats" /><summary type="html">Las principales etapas del desarollo del sistema Las etapas se definen como: Estudio de factibilidad: El estudio de factibilidad involucra investigación e investigación para evaluar el potencial de éxito del proyecto para apoyar la toma de decisiones. Tal estudio se ocupa de comprender objetivamente los recursos y costos involucrados y sopesarlos contra el valor que se obtendrá luego de la finalización del proyecto o sistema. Esto se llama retorno de la inversión (ROI) y solo se apoyarán aquellos proyectos y sistemas que devuelvan un ROI razonable. Ingeniería de requisitos: Esta etapa tiene como objetivo asegurar la comprensión de lo que la empresa necesita que haga el sistema propuesto. Los requisitos producidos durante esta etapa se convierten en la entrada para el diseño del sistema y así es fundamental que los requisitos se puedan rastrear hasta el final a través del ciclo de vida de desarrollo del sistema desde la fuente hasta implementación. La cantidad de detalles de requisitos capturados cuándo y dónde durante la ingeniería de requisitos se puede afectados por el enfoque del ciclo de vida a seguir. Diseño: En la etapa de diseño, las posibles soluciones que cumplan con los requisitos se consideran y sopesan contra cada otro. El diseño elegido se elabora luego con suficiente detalle para permitir que los desarrolladores lo implementen. Desarrollo (programación): El desarrollo es la fase en la que se crean, adquieren o configuran los componentes técnicos. Pruebas: Durante las pruebas, los componentes producidos durante el desarrollo se prueban para asegurarse de que funcionan correctamente y que el sistema hace lo que se supone que debe hacer. Hay diferentes niveles de pruebas, incluidas las pruebas unitarias, las pruebas de componentes, pruebas del sistema y pruebas de aceptación. Implementación: Antes de que un sistema de TI esté listo para usarse, debe ponerse en marcha en el entorno ‘en vivo’ u ‘operativo’. Hasta este punto en el desarrollo de un sistema, se puede haber utilizado un entorno de referencia o de prueba para proteger otros sistemas de fallas dentro del nuevo sistema. Los principales elementos que componene el ciclo de desarrollo de sistemas Los elementos que componen el ciclo de desarrollo de sistemas son: Contexto: Es el entorno en el que se desarrolla el proyecto, que es necesario comprender en su totalidad para saber como puede afectar al desarrollo de nuestro sistema. Ciclo de vida: Describe las etapas que normalmente seguiremos para planificar, diseñar, construir, probar y entregar sistemas de información. Proceso: Es el conjunto de actividades que se llevan a cabo en cada fase del ciclo de vida para generar un determinado output. Roles: Para avanzar a través de un SDLC, es imperativo que haya personas que puedan llevar a cabo las tareas requeridas. Muchos enfoques de desarrollo de sistemas describen los roles necesarios para nosotros. Entregables: Son los documentos, modelos, diseños y componentes de hardware o software que se requieren durante las diferentes etapas del SDLC. Lo importante a recordar es que muchos de los entregables son una forma de detallar lo que se entiende sobre el sistema en términos de lo que debe hacer, cómo debe hacerlo, qué tan bien lo hace y cómo se entrega. Técnicas: Hay una gran cantidad de técnicas que se pueden adoptar durante el desarrollo de un sistema. Los específicos que se usan varían según las preferencias del equipo y la organización, la elección del ciclo de vida y el enfoque de desarrollo del sistema seleccionado. A lo largo de los años, se han creado muchos ciclos de vida de desarrollo y, en algunos casos, se han comercializado. Cada uno tiene sus fortalezas y debilidades, y algunos funcionan mejor para algunos tipos de sistemas y proyectos que otros. Sin embargo, es importante enfatizar que seguir ciegamente un SDLC sin considerar el contexto o el enfoque de desarrollo del sistema podría resultar en el fracaso del proyecto. Cada proyecto de desarrollo de sistema es diferente en términos de escala y complejidad y, por lo tanto, el enfoque de ciclo de vida utilizado a menudo se beneficiará de la adaptación. Lo que queremos decir con ‘ciclo de vida de desarrollo del sistema’ Hoy en día se utilizan mucos ciclos de vida de desarrollo de sistemas diferentes. Sin embargo, están respaldados por solo cino ciclos de vida básicos y dos enfoques. Los primeros elementos fundamentales describen si un ciclo de vida es lienal o evolutivo: Un enfoque lineal describe una secuencia de tareas que se completan en orden, solo se mueve al siguiente paso una vez que se completa el paso anterior. En sistemas grandes y complejos, donde el desarrollo se distribuye o se subcontrata, un enfoque lineal ayuda a controlar el costo y el alcance, y permite que el desarrollo se divida entre los proveedores. Para proyectos más pequeños, un enfoque lineal puede ser simple de implementar, ya que los pasos se suceden lógicamente y pueden ser entendidos fácilmente por un equipo pequeño. Un enfoque evolutivo evoluciona la solución a través de versiones progresivas, cada uno más comleto que el anterior, y a menudo utiliza un enfoque de creación de prototipos para desarrollo. El desarrollo evolutivo es ideal para nuevos productos, que pueden ser proyectos de innovación o desarrollos de campo verde, donde a los usuarios les resulta difícil expresar sus requisitos. El uso de este enfoque permite que el sistema evolucione, descubriendo más y más comprensión a través de la demostración del software en funcionamiento hasta que se alcance la solución. Ciclos de vida basados en el enfoque lineal Cascada El ciclo de vida lineal más común es ‘Cascada’. Este fue uno de los primeros ciclos de vida introducidos en la década de 1970 y todavía tiene mucho peso y valor en la actualidad. Los principios detrás de Waterfall son que cada paso debe completarse antes de pasar al siguiente paso. Completar los pasos de esta manera garantiza que el sistema se entienda bien a través de la revisión y la documentación formal y, por lo tanto, debe conducir a un producto de calidad. Además, en caso de que haya un problema en una fase, hay que volver a empezar en la fase anterior para intentar corregirlo. El modelo ‘V’ El modelo ‘V’ se introdujo casi como una extensión del modelo Waterfall para abordar el problema por el cual el tiempo asignado a las pruebas a menudo podía reducirse durante un proyecto Waterfall si el tiempo y el dinero comenzaban a agotarse. Esto hace una distinción entre las actividades en el lado izquierdo de la ‘V’ (definición del proyecto) y el lado derecho de la ‘V’ (verificación y validación). Por lo tanto, la parte inferior de la ‘V’ es el desarrollo real que se lleva a cabo para traducir la definición del proyecto en un software funcional que se puede verificar y validar. Por esta razón, el modelo ‘V’ es particularmente bueno para los sistemas críticos para la seguridad en los que todavía se prevé una sola versión del sistema, pero la alta calidad y la seguridad son fundamentales. El diseño de etapas, particularmente la separación del diseño de alto nivel y el diseño de unidades/componentes, y la inclusión de ‘pruebas de integración’ se prestan bien a problemas complejos donde hay múltiples equipos o proveedores involucrados en la etapa de desarrollo. Ciclo de vida incremental Donde el ciclo de vida incremental difiere del modelo en cascada o ‘V’ es que después de comprender y diseñar completamente el sistema, se pueden tomar decisiones para entregar algunas partes del sistema antes que otras partes. Esto permite que los requisitos de alta prioridad se entreguen primero, entregando así elementos de funcionalidad al cliente o al negocio de manera temprana. Los incrementos se pueden entregar en paralelo, ya que el diseño central está completo. Es ideal donde se requiere una capacidad temprana, tal vez para un rápido tiempo de comercialización, pero donde la arquitectura central es estable. También es útil cuando la funcionalidad requerida es clara, pero hay opciones sobre qué aspecto es más importante entregar primero. Debido a que el diseño del sistema de alto nivel es independiente de la orden de entrega, la decisión sobre la orden de entrega se puede dejar para un momento más cercano. Ciclos de vida basados en el enfoque evolutivo Desarrollo iterativo El desarrollo iterativo es un ciclo de vida en el que el proyecto general se compone de varios desarrollos pequeños con plazos determinados, llamados iteraciones, que tienen lugar en secuencia. Cada iteración es un mini proyecto autónomo compuesto por actividades como requisitos, análisis, diseño, desarrollo y prueba; en este sentido, pueden parecerse un poco a proyectos mini-lineales. Los requisitos se obtienen durante cada iteración y se desarrollan para producir un sistema de trabajo que brinde algún valor al proyecto o al cliente. En proyectos grandes, esto podría ser un equipo múltiple que trabaje en la misma iteración. Se podría decir que hay un mínimoo de 3 iterations necesarias: Investigación: en esta iteración se realiza una investigación sobre el proyecto y se realiza un análisis de riesgos. Refinamiento: en esta iteración se realiza un análisis más dettllado del proyecto y se realizan los requisitos. Consolidación: en esta iteración se realiza la implementación y el testeo. Los ciclos de vida iterativos son buenos cuando los problemas o las soluciones no están claros desde el principio, o cuando la empresa aún no sabe si quiere financiar el proyecto. Las primeras iteraciones pueden dar mayor claridad sobre lo que es factible y cuánto puede costar. También es un enfoque muy adecuado para la creación de prototipos, probar el mercado o probar nuevas tecnologías. Espiral El modelo Espiral combina el desarrollo iterativo con la creación de prototipos para probar la comprensión y hacer evolucionar los requisitos para que los riesgos puedan abordarse en todo momento. No necesita requisitos que se definan de antemano. Este enfoque comienza con un concepto y revisa repetidamente las cuatro fases principales de desarrollo hasta que se completa un producto de trabajo adecuado. Las fases del ciclo de vida son: Determinar los objetivos: El equipo de desarrollo y los dueños de negocios identifican los objetivos para el desarrollo y acuerdan la priorización de los requisitos. Identificar y resolver los riesgos: Los desarrolladores exploran las posibilidades técnicas para cumplir con el objetivo comercial y evalúan los riesgos que la tecnología puede traer. Desarrollo y pruebas: La revisión de los prototipos permite al equipo de desarrollo evaluar qué tan bien se abordaron los requisitos y los riesgos y buscar mejoras. Planificación de la siguiente iteración: El sistema de trabajo se libera en el entorno operativo en vivo. El impacto de Ágil Ágil es un término popular que ahora se le da a los enfoques de desarrollo evolutivo siguiendo el ‘Manifiesto Ágil’ en 2001. El Manifiesto Ágil condujo a una forma completamente nueva de pensar sobre el desarrollo de software y surgió una nueva moda en los métodos, procesos y ciclos de vida de desarrollo Ágil. Los ciclos de vida lineales como Waterfall, el modelo ‘V’ e Incremental cayeron en desgracia en lugar de enfoques más evolutivos como Scrum y Agile Unified Process (AgileUp). Enfoques y métodos de desarrollo SSADM El método SSADM (Structured Systems Analysis and Design Methodology) implica la aplicación de una secuencia de tareas de análisis, documentación y diseño relacionados con las siguientes etapas: Etapa 0 - Estudio de la viabilidad Etapa 1 - Investigación de la situación actual Etapa 2 - Opciones del sistema de negocios Etapa 3 - Requisitos de especificación Etapa 4 - Opciones técnicas del sistema Etapa 5 - Diseño lógico Etapa 6 - Diseño físico El modelado es clave para SSADM y los tres modelos clave son: Modelo lógico: modela los requisitos de datos y las reglas comerciales. Modelo de flujo de datos: modela cómo se mueven los datos en un sistema de información. Modelo de evento de entidad: modela el comportamiento de la entidad, o los datos, y los eventos que hacen que la entidad cambie. DSDM El método DSDM (Dynamic Systems Development Method) es un enfoque iterativo e incremental evolutivo que fue desarrollado en 1994 como una entrega para apoyar la tendencia hacia el “desarrollo rápido de aplicaciones”. El éxito de DSDM se debe a su convicción de que cualquier proyecto debe estar alienado con objetivos estratégicos claramente definidos y centrarse en la entrega temprana. El respaldo de esta filosofía con los 8 principios permite a los equipos mantener el enfoque y alcanzar los objetivos del proyecto: Centrarse en la necesidad comercial. Entregar a tiempo. Colaborar. Nunca comprometer la calidad. COnstruir incrementalmente a paritr de cimientos firmes. Desarrollar iterativamente. Comunicarse de forma continua y clara. Demostrar control. SCRUM Scrum es un proceso iterativo e incremental que sigue un enfoque evolutivo para el desarrollo de sistemas de software. Introduce un lenguaje y conceptos únicos que rigen cómo un pequeño equipo de ingenieros de software multidisciplinarios planifica y supervisa el trabajo. Scrum solo propone tres roles que son: Propietario del producto: representa el negocio y es la voz del cliente. Equipo de desarrollo: equipo multifuncional y autoorganizado que entrega el software funcional. Scrum master: persona responsable de eliminar los impedimentos para que el equipo de desarrollo pueda cumplir los objetivos. Las iteraciones se denominan “Sprints” y, por lo general, serán breves y se centrarán en entregar una versión funcional del producto, según se define mediante un acuerdo con el propietario del producto. RUP El Proceso Unificado Racional (RUP) es un proceso de ingeniería de software iterativo, evolutivo e incremental, construido sobre los cimientos del modelo Espiral, que asigna y gestiona tareas y responsabilidades de forma disciplinada dentro de una organización desarrollo. Consiste en 4 fases mayores: Inicio. Elaboración. Construcción. Transición. Al ser un proceso de software, RUP es popular entre los equipos de desarrolladores y utiliza uso extensivo de UML para el Análisis y Diseño orientado a onjetos (OOA&amp;amp;D) y el modelado de casos. Esto puede resultar abrumador pero fomenta un diseño sólido y una buena trazabilidad. Desarrollo de Software Esbelto Este es un conjunto de técnicas y herramientas que se pueden aplicar para eliminar el desperdicio en la fabricación y, por lo tanto, mejorar la productividad. Estos principios son: Centrarse en los clientes Energizar a los trabajadores Eliminar residuos Aprender rápido Entregar rápido Calidad de construcción en Sigue mejorando Optimizar el conjunto Aunque el LSD proporciona herramientas y técnicas, su objetivo es reducir los residuos en el proceso de desarrollo de un producto. No proporciona detalles sobre las etapas que debe seguir o las técnicas de desarrollo que debe usar, ya que espera que ya tenga un enfoque que esté siguiendo. Debido a esto, LSD es un enfoque ideal para combinar con otros métodos o enfoques, como Scrum, por ejemplo.</summary></entry><entry><title type="html">Informe práctica</title><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/informe/" rel="alternate" type="text/html" title="Informe práctica" /><published>2022-11-01T00:00:00-04:00</published><updated>2022-11-01T00:00:00-04:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/informe</id><content type="html" xml:base="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/informe/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;

  &lt;h1 align=&quot;center&quot;&gt;Informe práctica Introduction to Systems Development &lt;/h1&gt;

&lt;/p&gt;

&lt;h2 id=&quot;modificando-_configyml-y-sus-valores-de-default&quot;&gt;Modificando _config.yml y sus valores de default&lt;/h2&gt;

&lt;p&gt;Editando el archivo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; cambiamos la mayoría de los valores de Jeykill. En esta práctica se ha modificado lo siguiente:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minimal_mistakes_skin&lt;/code&gt;: Se cambio de default a dark.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;locale&lt;/code&gt;: Se cambio el parámetro a es-ES.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;title&lt;/code&gt;: Se cambio el título a &lt;em&gt;Introducción al Desarrollo de Sistemas&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subtitle&lt;/code&gt;: Se cambió el subtítulo a &lt;em&gt;A web made by Arturo Pestana&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt;: Cambiamos el name a &lt;em&gt;Arturo&lt;/em&gt; para que el nombre del autor sea el nuestro, esto lo hacemos debido a que el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt;puede ser referenciado en distintos sitios de nuestra web.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;description&lt;/code&gt;: Es otro objeto al que se le puede referenciar desde otros sitios de la web, lo cambiamos.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;baseurl&lt;/code&gt;: Se modifica para que tenga la url de la página web.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;author&lt;/code&gt;: Este objeto se usa para referenciar al autor de la página, por lo tanto se modificaron varios parámetros.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt;: Es una referencia al &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt; anteriormente mencionado.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;avatar&lt;/code&gt;: Lo modificamos y ponemos la ruta de nuestra foto.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bio&lt;/code&gt;: Lo modificamos para que tenga una descripción del autor.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;location&lt;/code&gt;: Lo modificamos por &lt;em&gt;Canary Island&lt;/em&gt;.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;links&lt;/code&gt;: Este es un array de referencias, contiene las urls de las redes sociales, eliminamos el de Twitter e Instagram y solo modificamos el de Github, añadiendo el enlace a nuestro perfil.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;footer&lt;/code&gt;: Es el objeto que referencia al pie de página. Conrtiene lo mismo que el array &lt;em&gt;links&lt;/em&gt; por lo que procedemos a hacer los mismos cambios mencionados anteriormente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se modificaron varios parámetros de la sección de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;defaults&lt;/code&gt;. En este objeto se especifican reglas generales que se aplicarán a cierto grupo de páginas, donde camben destacar los posts o los docs.&lt;/p&gt;

&lt;h1 id=&quot;desplegando-el-sitio-web-en-github-usando-jeykill&quot;&gt;Desplegando el sitio web en Github usando Jeykill&lt;/h1&gt;

&lt;p&gt;Para desplegar una página con gh-pages usamos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npx gh-pages -d _site&lt;/code&gt;, npx es un ejecutor de paquetes basados en Node.js.&lt;/p&gt;

&lt;p&gt;Gh-pages es un paquete que contiene un módulo de despliegue automático que realiza las tareas necesarias para el despliegue de la página web de nuestro repositorio en los servidores de github con gh-pages. Crea automáticamente una rama en nuestro repositorio llamada gh-pages donde situa los archivos necesarios para el despliegue de la página.&lt;/p&gt;

&lt;h1 id=&quot;creación-de-una-collection-en-jeykill&quot;&gt;Creación de una Collection en Jeykill&lt;/h1&gt;

&lt;p&gt;En el archivo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;, se define nuestra collection como demostraremos ahora:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Collections&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;docs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/:collection/:path/&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;recipes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/:collection/:path/&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;pets&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/:collection/:path/&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;portfolio&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/:collection/:path/&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;publicaciones&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/:collection/:path/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Como vemos tenemos una collection llamada &lt;em&gt;publicaciones&lt;/em&gt;, con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;output: true&lt;/code&gt; para que jeykill cree una página para cada uno de las collections dentro de la web. Una vez realizado esto crearemos un archivo en &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_pages&lt;/code&gt; llamado &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;publicaciones.md&lt;/code&gt; donde solo pondremos un mensaje diciendo que se hace uso de las collections y enseñando todas las publicaciones con liquid, donde podemos ver que ya se hace uso de liquid en nuestra web.&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Publicaciones&lt;/span&gt;    
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;collection&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/publicaciones/&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;publicaciones&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;entries_layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;grid&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wide&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;Sample document listing for the collection `_publicaciones`.&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;Imprime todas las publicaciones que hemos hecho&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;


&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Future Date&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Resumen tema 2 Developing Information Systems&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Informe práctica&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;implementación del search&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Informe práctica&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Informe práctica&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Exclude Post from Search Index&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Header Video&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Gemified Theme -- Beta Release&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Gemified Theme -- Alpha Release&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Welcome to Jekyll!&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Markup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Syntax Highlighting&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Markup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Another Post with Images&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Markup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;HTML Tags and Formatting&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Markup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Image Alignment&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Markup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Text Alignment&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Markup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Title with Special&amp;amp;nbsp;---&amp;amp;nbsp;Characters&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Markup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Title *with* **Markdown**&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Markup&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Text Readability Test&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Wide Single Layout Page&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Sidebar with Navigation List&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Sidebar Custom&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;More Tag&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Header Image Overlay&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Header Image Overlay with Custom Tagline&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Header Overlay with Background Fill&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Header Image (Vertical)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Header Image and Text Readability&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Header Image (Horizontal)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Header Image (External URL)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Author Sidebar Disabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Author Override&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Excerpt (Generated)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Excerpt (Defined)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Code Excerpt (Generated)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Post with Sticky Table of Contents&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Post with Table of Contents&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Post with Nested Table of Contents&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Post with Nested Table of Contents via Helper&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Reading Time, Comments, Social Sharing Links, and Related Posts Disabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Social Sharing Links Enabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Social Sharing Links Disabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Related Posts Enabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Related Posts Disabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Read Time Enabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Read Time Disabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Post Date Enabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Post Date Disabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Comments Enabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Comments Disabled&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Twitter Embed&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Gallery&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Image (Caption)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Image (Linked with Caption)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Teaser Image with OpenGraph Override&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Image (Standard)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Image (with Link)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Overlay Image with OpenGraph Override&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Header Image with OpenGraph Override&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Video (YouTube)&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Link&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Quote&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Notice&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Chat&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Standard&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Modified Date&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Suspicio? Bene ... tunc ibimus? Quis uh ... CONEXUS locus his diebus? Quisque semper aliquid videtur, in volutpat mauris. Nolo enim dicere. Vobis neque ab aliis. Ego feci memetipsum explicans. Gus mortuus est. Lorem opus habeo. Jackson Isai? Tu quoque ... A te quidem a ante. Vos scitis quod blinking res Ive &apos;been vocans super vos? Et conteram illud, et conteram hoc. Maledicant druggie excors. Iam hoc tu facere conatus sum ad te in omni tempore? Ludum mutavit. Verbum est ex. Et ... sunt occid&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Antidisestablishmentarianism&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Edge Case&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Post with multiline excerpt&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Edge Case No Yaml Title&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Edge Case&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;No Body Content&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Edge Case&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Many Categories&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Edge Case&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Many Tags&lt;/span&gt;

&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Edge Case&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Nested and Mixed Lists&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Finalmente, en el archivo navigation.yml creamos en &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; un enlace para acceder a la página de publicaciones.md desde la barra superior de nuestra web.&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Quick-Start&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Guide&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/docs/quick-start-guide/&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;About&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/about/&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Sample&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Posts&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/year-archive/&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Sample&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Collections&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/collection-archive/&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Terms&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Privacy&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Policy&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/terms/&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Publicaciones&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/publicaciones/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;404-error-not-found&quot;&gt;404 Error Not Found&lt;/h1&gt;

&lt;p&gt;Modificamos el fichero &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;404.md&lt;/code&gt; donde detallaremos los parametros que usará Jekyll para la creación de la página 404. Primero escribimos el mensaje que aparecerá en pantalla. Una vez hecho esto vamos a usar un servicio web para mostrar imágenes aleatorias de gatos y también citas famosas con su autor. La llamada a la API se hará de la siguiente forma:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;text/javascript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*
  https://docs.thecatapi.com/ 
*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://api.thecatapi.com/v1/images/search?size=full&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// CAT &lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;divTitle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;comment-cat&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;divcat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;x-api-key&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;56a4f1cc-7f60-468d-9dba-e4b6f04b7c7d&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// console.log(cat);   &lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Consuélate con unos gatos ;)&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   
    &lt;span class=&quot;nx&quot;&gt;divTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;divcat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   

    &lt;span class=&quot;c1&quot;&gt;// QUOTE&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quoteDiv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;authorDiv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quoteRes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://api.quotable.io/random&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quoteRes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;quoteDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&amp;lt;h2&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/h2&amp;gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;authorDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&amp;lt;h3&amp;gt;—&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/h3&amp;gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si probamos a buscar una página que no existe, ahora nos saldrá esto:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/assets/images/pagenotfound.png&quot; alt=&quot;error404&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;desplegando-la-web-con-netlify&quot;&gt;Desplegando la web con Netlify&lt;/h1&gt;

&lt;p&gt;Para realizar el despliegue con Netlify primero creamos una cuenta asociándola con Github. Luego seleccionamos el repositorio que vamos a utilizar y lo hacemos público porque desplegar repositorios privados es solo mediante pago. Una vez hecho esto nos quedaría ajustar ciertos parámetros para poder desplegar en netlify. En el fichero &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.dev.yml&lt;/code&gt; que es el fichero de sobrecarga de objetos, tenemos que poner &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;baseurl: &quot;&quot;&lt;/code&gt;. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Una vez hecho los cambios tenemos que ir a netlify y tendremos que cambiar el comando de despliegue de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll build --config _config.yml,_config.dev.yml&lt;/code&gt; para que se use la configuración del fichero _config.yml. Si esto no se hace la página se desplegará mal.&lt;/p&gt;</content><author><name>Arturo Pestana</name></author><category term="Post Formats" /><summary type="html">Informe práctica Introduction to Systems Development Modificando _config.yml y sus valores de default Editando el archivo _config.yml cambiamos la mayoría de los valores de Jeykill. En esta práctica se ha modificado lo siguiente: minimal_mistakes_skin: Se cambio de default a dark. locale: Se cambio el parámetro a es-ES. title: Se cambio el título a Introducción al Desarrollo de Sistemas. subtitle: Se cambió el subtítulo a A web made by Arturo Pestana. name: Cambiamos el name a Arturo para que el nombre del autor sea el nuestro, esto lo hacemos debido a que el namepuede ser referenciado en distintos sitios de nuestra web. description: Es otro objeto al que se le puede referenciar desde otros sitios de la web, lo cambiamos. baseurl: Se modifica para que tenga la url de la página web. author: Este objeto se usa para referenciar al autor de la página, por lo tanto se modificaron varios parámetros. name: Es una referencia al name anteriormente mencionado. avatar: Lo modificamos y ponemos la ruta de nuestra foto. bio: Lo modificamos para que tenga una descripción del autor. location: Lo modificamos por Canary Island. links: Este es un array de referencias, contiene las urls de las redes sociales, eliminamos el de Twitter e Instagram y solo modificamos el de Github, añadiendo el enlace a nuestro perfil. footer: Es el objeto que referencia al pie de página. Conrtiene lo mismo que el array links por lo que procedemos a hacer los mismos cambios mencionados anteriormente. Se modificaron varios parámetros de la sección de defaults. En este objeto se especifican reglas generales que se aplicarán a cierto grupo de páginas, donde camben destacar los posts o los docs. Desplegando el sitio web en Github usando Jeykill Para desplegar una página con gh-pages usamos npx gh-pages -d _site, npx es un ejecutor de paquetes basados en Node.js. Gh-pages es un paquete que contiene un módulo de despliegue automático que realiza las tareas necesarias para el despliegue de la página web de nuestro repositorio en los servidores de github con gh-pages. Crea automáticamente una rama en nuestro repositorio llamada gh-pages donde situa los archivos necesarios para el despliegue de la página. Creación de una Collection en Jeykill En el archivo _config.yml, se define nuestra collection como demostraremos ahora: # Collections collections: docs: output: true permalink: /:collection/:path/ recipes: output: true permalink: /:collection/:path/ pets: output: true permalink: /:collection/:path/ portfolio: output: true permalink: /:collection/:path/ publicaciones: output: true permalink: /:collection/:path/ Como vemos tenemos una collection llamada publicaciones, con output: true para que jeykill cree una página para cada uno de las collections dentro de la web. Una vez realizado esto crearemos un archivo en _pages llamado publicaciones.md donde solo pondremos un mensaje diciendo que se hace uso de las collections y enseñando todas las publicaciones con liquid, donde podemos ver que ya se hace uso de liquid en nuestra web. --- title: Publicaciones layout: collection permalink: /publicaciones/ collection: publicaciones entries_layout: grid classes: wide --- Sample document listing for the collection `_publicaciones`. Imprime todas las publicaciones que hemos hecho: - Post: Future Date - Resumen tema 2 Developing Information Systems - Informe práctica: implementación del search - Informe práctica - Informe práctica - Exclude Post from Search Index - Layout: Header Video - Gemified Theme -- Beta Release - Gemified Theme -- Alpha Release - Welcome to Jekyll! - Markup: Syntax Highlighting - Markup: Another Post with Images - Markup: HTML Tags and Formatting - Markup: Image Alignment - Markup: Text Alignment - Markup: Title with Special&amp;amp;nbsp;---&amp;amp;nbsp;Characters - Markup: Title *with* **Markdown** - Markup: Text Readability Test - Wide Single Layout Page - Layout: Sidebar with Navigation List - Layout: Sidebar Custom - Layout: More Tag - Layout: Header Image Overlay - Layout: Header Image Overlay with Custom Tagline - Layout: Header Overlay with Background Fill - Layout: Header Image (Vertical) - Layout: Header Image and Text Readability - Layout: Header Image (Horizontal) - Layout: Header Image (External URL) - Layout: Author Sidebar Disabled - Layout: Author Override - Layout: Excerpt (Generated) - Layout: Excerpt (Defined) - Layout: Code Excerpt (Generated) - Layout: Post with Sticky Table of Contents - Layout: Post with Table of Contents - Layout: Post with Nested Table of Contents - Layout: Post with Nested Table of Contents via Helper - Layout: Reading Time, Comments, Social Sharing Links, and Related Posts Disabled - Layout: Social Sharing Links Enabled - Layout: Social Sharing Links Disabled - Layout: Related Posts Enabled - Layout: Related Posts Disabled - Layout: Read Time Enabled - Layout: Read Time Disabled - Layout: Post Date Enabled - Layout: Post Date Disabled - Layout: Comments Enabled - Layout: Comments Disabled - Post: Twitter Embed - Post: Gallery - Post: Image (Caption) - Post: Image (Linked with Caption) - Post: Teaser Image with OpenGraph Override - Post: Image (Standard) - Post: Image (with Link) - Post: Overlay Image with OpenGraph Override - Post: Header Image with OpenGraph Override - Post: Video (YouTube) - Post: Link - Post: Quote - Post: Notice - Post: Chat - Post: Standard - Post: Modified Date - Suspicio? Bene ... tunc ibimus? Quis uh ... CONEXUS locus his diebus? Quisque semper aliquid videtur, in volutpat mauris. Nolo enim dicere. Vobis neque ab aliis. Ego feci memetipsum explicans. Gus mortuus est. Lorem opus habeo. Jackson Isai? Tu quoque ... A te quidem a ante. Vos scitis quod blinking res Ive &apos;been vocans super vos? Et conteram illud, et conteram hoc. Maledicant druggie excors. Iam hoc tu facere conatus sum ad te in omni tempore? Ludum mutavit. Verbum est ex. Et ... sunt occid - Antidisestablishmentarianism - Edge Case: Post with multiline excerpt - Edge Case No Yaml Title - Edge Case: No Body Content - Edge Case: Many Categories - Edge Case: Many Tags - Edge Case: Nested and Mixed Lists Finalmente, en el archivo navigation.yml creamos en main un enlace para acceder a la página de publicaciones.md desde la barra superior de nuestra web. main: - title: &quot;Quick-Start Guide&quot; url: /docs/quick-start-guide/ - title: &quot;About&quot; url: /about/ - title: &quot;Sample Posts&quot; url: /year-archive/ - title: &quot;Sample Collections&quot; url: /collection-archive/ - title: &quot;Terms &amp;amp;amp; Privacy Policy&quot; url: /terms/ - title: &quot;Publicaciones&quot; url: /publicaciones/ 404 Error Not Found Modificamos el fichero 404.md donde detallaremos los parametros que usará Jekyll para la creación de la página 404. Primero escribimos el mensaje que aparecerá en pantalla. Una vez hecho esto vamos a usar un servicio web para mostrar imágenes aleatorias de gatos y también citas famosas con su autor. La llamada a la API se hará de la siguiente forma: &amp;lt;script type=&quot;text/javascript&quot;&amp;gt; /* https://docs.thecatapi.com/ */ const URL = &apos;https://api.thecatapi.com/v1/images/search?size=full&apos;; (async function() { try { // CAT let divTitle = document.getElementById(&quot;comment-cat&quot;); let divcat = document.getElementById(&quot;cat&quot;); let response = await fetch(URL, { headers: { &apos;x-api-key&apos;: &quot;56a4f1cc-7f60-468d-9dba-e4b6f04b7c7d&quot; } }); let cat = await response.json(); // console.log(cat); let img = document.createElement(&quot;img&quot;); let title = document.createElement(&quot;h2&quot;); title.innerText = &quot;Consuélate con unos gatos ;)&quot;; divTitle.append(title); img.src = cat[0].url; divcat.appendChild(img); // QUOTE const quoteDiv = document.getElementById(&quot;quote&quot;); const authorDiv = document.getElementById(&quot;author&quot;); const quoteRes = await fetch(&apos;https://api.quotable.io/random&apos;); const data = await quoteRes.json(); quoteDiv.innerHTML = `&amp;lt;h2&amp;gt;${data.content}&amp;lt;/h2&amp;gt;`; authorDiv.innerHTML = `&amp;lt;h3&amp;gt;—${data.author}&amp;lt;/h3&amp;gt;`; } catch(e) { console.log(e); } })(); &amp;lt;/script&amp;gt; Si probamos a buscar una página que no existe, ahora nos saldrá esto: Desplegando la web con Netlify Para realizar el despliegue con Netlify primero creamos una cuenta asociándola con Github. Luego seleccionamos el repositorio que vamos a utilizar y lo hacemos público porque desplegar repositorios privados es solo mediante pago. Una vez hecho esto nos quedaría ajustar ciertos parámetros para poder desplegar en netlify. En el fichero _config.dev.yml que es el fichero de sobrecarga de objetos, tenemos que poner baseurl: &quot;&quot;. Una vez hecho los cambios tenemos que ir a netlify y tendremos que cambiar el comando de despliegue de npm run build jekyll build --config _config.yml,_config.dev.yml para que se use la configuración del fichero _config.yml. Si esto no se hace la página se desplegará mal.</summary></entry><entry><title type="html">Informe práctica</title><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/resumen/" rel="alternate" type="text/html" title="Informe práctica" /><published>2022-11-01T00:00:00-04:00</published><updated>2022-11-01T00:00:00-04:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/resumen</id><content type="html" xml:base="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/post%20formats/resumen/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;

  &lt;h1 align=&quot;center&quot;&gt;Introducción al desarrollo de sistemas &lt;/h1&gt;

&lt;/p&gt;

&lt;h1 id=&quot;qué-es-el-desarrollo-de-sistemas&quot;&gt;¿Qué es el desarrollo de sistemas?&lt;/h1&gt;

&lt;p&gt;Es el proceso de tomar un conjunto de requisitos de negocio y, a través de una serie de etapas estructuradas, traducirlos en un sistema operativo de TI. Las etapas varían de acuerdo con el enfoque de desarrollo que se utiliza, pero normalmente incluyen:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un estudio de viabilidad, para ver si el proyecto merece la pena.&lt;/li&gt;
  &lt;li&gt;Requiere ingeniería para analizar las necesidades empresariales y especificar las necesidades de los usuarios.&lt;/li&gt;
  &lt;li&gt;Diseño del sistema para satisfacer las necesidades de los usuarios.&lt;/li&gt;
  &lt;li&gt;Desarrollo del software necesario para cumplir los requisitos.&lt;/li&gt;
  &lt;li&gt;Pruebas del software.&lt;/li&gt;
  &lt;li&gt;Implementación de la solución.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Antes, el desarrollo de sistemas se llevaba a cabo de una manera más aleatoria, ad hoc, y el resultado dependía en gran medida de la competencia y la motivación de los desarrolladores individuales. Hoy en día, la importancia central de los sistemas de TI en la mayoría de las organizaciones significa que se han introducido procesos más estructurados y manejables, para reducir el ‘elemento humano’ impredecible y hacer posible la construcción de sistemas más grandes y complejos.&lt;/p&gt;

&lt;h1 id=&quot;sistemas-de-desarrollo-y-otras-disciplinas&quot;&gt;Sistemas de desarrollo y otras disciplinas&lt;/h1&gt;

&lt;p&gt;El desarrollo de sistemas no se lleva a cabo de forma aislada, sino que forma parte de una red de disciplinas con la que se relaciona:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Gestión del proyecto&lt;/strong&gt;: para que un proyecto de desarrollo de sistemas tenga éxito, los conocimientos técnicos no son suficientes, también se requiere una gestión eficaz por parte del director del proyecto. Una buena gestión libera al equipo de desarrollo para concentrarse en la parte técnica de diseñar e implementar la solución.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;*Análisis de negocios**: se ocupa de investigar la situación del negocio y averiguar cuáles son los problemas que deben resolverse o las oportunidades que deben explotarse. Los analistas de negocios también son importantes para obtener, documentar y gestionar los requisitos para los sistemas y servicios de TI nuevos o mejorados.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Arquitectura de sistemas&lt;/strong&gt;: es importante desarrollar una arquitectura para que la organización apoye y coordine sus sistemas y proporcione una plataforma coherente para la expansión y el desarrollo.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Programación&lt;/strong&gt;: es un área especializada que requiere altos niveles de experiencia técnica, sobre todo en cómo aprovechar al máximo las posibilidades que ofrecen el hardware y el software disponibles.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Pruebas&lt;/strong&gt;: el tester se esfuerza por identificar defectos en cualquier versión para asegurar que el sistema sea satisfactorio. Un punto importante a tener en cuenta es que ninguna prueba, por exhaustiva que sea, puede ofrecer la seguridad de que el software está cien por ciento libre de errores.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gestión de configuración y control de cambios: está relacionada con el control de cambios, que es un proceso para gestionar los cambios en un sistema o producto de una manera controlada.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Control y seguro de calidad&lt;/strong&gt;: son los procesos que se emplean dentro de un equipo de proyecto para garantizar que los productos entregados cumplen los criterios de calidad definidos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Gestión de servicios&lt;/strong&gt;: se ocupa de la gestión y el mantenimiento de los servicios prestados por los sistemas de TI. Incluye, por ejemplo, actividades como la gestión de instalaciones, el control de la infraestructura de TI de apoyo y la gestión de aplicaciones entre otros.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;deslocalización-y-externalización-del-desarrollo-de-sistemas&quot;&gt;Deslocalización y externalización del desarrollo de sistemas&lt;/h1&gt;

&lt;p&gt;Estas dos prácticas se mencionan a menudo juntas pero, de hecho, son distintas y una no implica necesariamente la otra:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;La &lt;strong&gt;deslocalización&lt;/strong&gt; implica el uso de recursos de desarrollo en otros países, generalmente porque se pueden obtener recursos de alta calidad por un costo considerablemente menor que en el país de origen de la organización.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;La &lt;strong&gt;externalización&lt;/strong&gt; significa ceder el trabajo de desarrollo a empresas y consultorías especializadas en servicios de TI. Un contrato de externalización puede cubrir solo el trabajo de desarrollo o, a menudo, el proveedor asume toda la responsabilidad de los sistemas de TI de la organización. Por supuesto, la externalización y la deslocalización a veces se combinan y también tiene ciertas desventajas:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;Deslocalización&lt;/strong&gt;: puede haber retrasos y dificultades de comunicación asociados al trabajo con desarrolladores que están muy lejos, cuyo primer idioma no es el mismo que el de la organización del cliente y cuya cultura es muy diferente.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;Externalización&lt;/strong&gt;: uno de los principales peligros aquí es que la organización del cliente pierde el control directo de los sistemas que son críticos para sus objetivos de negocio. Además, el conocimiento de estos sistemas clave reside ahora en la organización de proveedores en lugar de conservarse internamente.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Arturo Pestana</name></author><category term="Post Formats" /><summary type="html">Introducción al desarrollo de sistemas ¿Qué es el desarrollo de sistemas? Es el proceso de tomar un conjunto de requisitos de negocio y, a través de una serie de etapas estructuradas, traducirlos en un sistema operativo de TI. Las etapas varían de acuerdo con el enfoque de desarrollo que se utiliza, pero normalmente incluyen: Un estudio de viabilidad, para ver si el proyecto merece la pena. Requiere ingeniería para analizar las necesidades empresariales y especificar las necesidades de los usuarios. Diseño del sistema para satisfacer las necesidades de los usuarios. Desarrollo del software necesario para cumplir los requisitos. Pruebas del software. Implementación de la solución. Antes, el desarrollo de sistemas se llevaba a cabo de una manera más aleatoria, ad hoc, y el resultado dependía en gran medida de la competencia y la motivación de los desarrolladores individuales. Hoy en día, la importancia central de los sistemas de TI en la mayoría de las organizaciones significa que se han introducido procesos más estructurados y manejables, para reducir el ‘elemento humano’ impredecible y hacer posible la construcción de sistemas más grandes y complejos. Sistemas de desarrollo y otras disciplinas El desarrollo de sistemas no se lleva a cabo de forma aislada, sino que forma parte de una red de disciplinas con la que se relaciona: Gestión del proyecto: para que un proyecto de desarrollo de sistemas tenga éxito, los conocimientos técnicos no son suficientes, también se requiere una gestión eficaz por parte del director del proyecto. Una buena gestión libera al equipo de desarrollo para concentrarse en la parte técnica de diseñar e implementar la solución. *Análisis de negocios**: se ocupa de investigar la situación del negocio y averiguar cuáles son los problemas que deben resolverse o las oportunidades que deben explotarse. Los analistas de negocios también son importantes para obtener, documentar y gestionar los requisitos para los sistemas y servicios de TI nuevos o mejorados. Arquitectura de sistemas: es importante desarrollar una arquitectura para que la organización apoye y coordine sus sistemas y proporcione una plataforma coherente para la expansión y el desarrollo. Programación: es un área especializada que requiere altos niveles de experiencia técnica, sobre todo en cómo aprovechar al máximo las posibilidades que ofrecen el hardware y el software disponibles. Pruebas: el tester se esfuerza por identificar defectos en cualquier versión para asegurar que el sistema sea satisfactorio. Un punto importante a tener en cuenta es que ninguna prueba, por exhaustiva que sea, puede ofrecer la seguridad de que el software está cien por ciento libre de errores. Gestión de configuración y control de cambios: está relacionada con el control de cambios, que es un proceso para gestionar los cambios en un sistema o producto de una manera controlada. Control y seguro de calidad: son los procesos que se emplean dentro de un equipo de proyecto para garantizar que los productos entregados cumplen los criterios de calidad definidos. Gestión de servicios: se ocupa de la gestión y el mantenimiento de los servicios prestados por los sistemas de TI. Incluye, por ejemplo, actividades como la gestión de instalaciones, el control de la infraestructura de TI de apoyo y la gestión de aplicaciones entre otros. Deslocalización y externalización del desarrollo de sistemas Estas dos prácticas se mencionan a menudo juntas pero, de hecho, son distintas y una no implica necesariamente la otra: La deslocalización implica el uso de recursos de desarrollo en otros países, generalmente porque se pueden obtener recursos de alta calidad por un costo considerablemente menor que en el país de origen de la organización. La externalización significa ceder el trabajo de desarrollo a empresas y consultorías especializadas en servicios de TI. Un contrato de externalización puede cubrir solo el trabajo de desarrollo o, a menudo, el proveedor asume toda la responsabilidad de los sistemas de TI de la organización. Por supuesto, la externalización y la deslocalización a veces se combinan y también tiene ciertas desventajas: Deslocalización: puede haber retrasos y dificultades de comunicación asociados al trabajo con desarrolladores que están muy lejos, cuyo primer idioma no es el mismo que el de la organización del cliente y cuya cultura es muy diferente. Externalización: uno de los principales peligros aquí es que la organización del cliente pierde el control directo de los sistemas que son críticos para sus objetivos de negocio. Además, el conocimiento de estos sistemas clave reside ahora en la organización de proveedores en lugar de conservarse internamente.</summary></entry><entry><title type="html">Exclude Post from Search Index</title><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/post-exclude-search/" rel="alternate" type="text/html" title="Exclude Post from Search Index" /><published>2017-11-28T00:00:00-05:00</published><updated>2018-02-19T08:06:00-05:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/post-exclude-search</id><content type="html" xml:base="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/post-exclude-search/">&lt;p&gt;This post should not appear in the search index because it has the following YAML Front Matter:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;search: false&lt;/code&gt; only works to exclude posts when using Lunr as a search provider.&lt;/p&gt;

&lt;p&gt;To exclude files when using Algolia as a search provider add an array to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;algolia.files_to_exclude&lt;/code&gt; in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;. For more configuration options be sure to check their &lt;a href=&quot;https://community.algolia.com/jekyll-algolia/options.html&quot;&gt;full documentation&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;algolia&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Exclude more files from indexing&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;files_to_exclude&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.html&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.md&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;excluded-file.html&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_posts/2017-11-28-post-exclude-search.md&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;subdirectory/*.html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Arturo Pestana</name></author><category term="Jekyll" /><summary type="html">This post should not appear in the search index because it has the following YAML Front Matter:</summary></entry><entry><title type="html">Layout: Header Video</title><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/layout/uncategorized/layout-header-video/" rel="alternate" type="text/html" title="Layout: Header Video" /><published>2017-01-23T00:00:00-05:00</published><updated>2017-01-23T00:00:00-05:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/layout/uncategorized/layout-header-video</id><content type="html" xml:base="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/layout/uncategorized/layout-header-video/">&lt;p&gt;This post should display a &lt;strong&gt;header with a responsive video&lt;/strong&gt;, if the theme supports it.&lt;/p&gt;

&lt;h2 id=&quot;settings&quot;&gt;Settings&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Parameter&lt;/th&gt;
      &lt;th&gt;Required&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;ID of the video&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;provider&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Required&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Hosting provider of the video, either &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;youtube&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vimeo&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;youtube&quot;&gt;YouTube&lt;/h3&gt;

&lt;p&gt;To embed the following YouTube video at url &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://www.youtube.com/watch?v=-PVofD2A9t8&lt;/code&gt; (long version) or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://youtu.be/-PVofD2A9t8&lt;/code&gt; (short version) into a post or page’s main content you’d use:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;video&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-PVofD2A9t8&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;youtube&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!-- Courtesy of embedresponsively.com //--&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/-PVofD2A9t8&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;To embed it as a video header you’d use the following YAML Front Matter&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;video&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;-PVofD2A9t8&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;youtube&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;vimeo&quot;&gt;Vimeo&lt;/h3&gt;

&lt;p&gt;To embed the following Vimeo video at url &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://vimeo.com/212731897&lt;/code&gt; into a post or page’s main content you’d use:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;video&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;212731897&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vimeo&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!-- Courtesy of embedresponsively.com //--&gt;

&lt;div class=&quot;responsive-video-container&quot;&gt;
    &lt;iframe src=&quot;https://player.vimeo.com/video/212731897?dnt=true&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;p&gt;To embed it as a video header you’d use the following YAML Front Matter&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;video&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;212731897&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;vimeo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Arturo Pestana</name></author><category term="Layout" /><category term="Uncategorized" /><category term="video" /><category term="layout" /><summary type="html">This post should display a header with a responsive video, if the theme supports it.</summary></entry><entry><title type="html">Gemified Theme – Beta Release</title><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/gemified-theme-beta/" rel="alternate" type="text/html" title="Gemified Theme – Beta Release" /><published>2016-10-06T00:00:00-04:00</published><updated>2018-03-20T16:01:04-04:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/gemified-theme-beta</id><content type="html" xml:base="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/gemified-theme-beta/">&lt;p&gt;Hot on the heels of Jekyll v3.3.0 is a beta release of Minimal Mistakes… as a gemified theme.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/minimal-mistakes-jekyll&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minimal-mistakes-jekyll&lt;/code&gt;&lt;/a&gt; can only be used with Jekyll proper. If you’re hosting on GitHub Pages or using that gem the theme won’t work. 3rd party themes haven’t been white-listed so it’s a no go for now.&lt;/p&gt;

&lt;p&gt;Fine with all that? Great. Let’s continue.&lt;/p&gt;

&lt;p&gt;If you’re migrating a site already using Minimal Mistakes and haven’t customized any of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_layouts&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_sass&lt;/code&gt; partials, or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets&lt;/code&gt; this should be quick and painless.&lt;/p&gt;

&lt;h2 id=&quot;step-1-remove-theme-files&quot;&gt;Step 1: Remove Theme Files&lt;/h2&gt;

&lt;p&gt;Remove &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_layouts&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_sass&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets&lt;/code&gt; folders and files within. You won’t need these anymore as they’re bundled in the theme.&lt;/p&gt;

&lt;p&gt;If you customized any of these then leave them alone and only remove the untouched ones. If setup correctly your modified versions should act as &lt;a href=&quot;http://jekyllrb.com/docs/themes/#overriding-theme-defaults&quot;&gt;overrides&lt;/a&gt; to the versions bundled with the theme.&lt;/p&gt;

&lt;h2 id=&quot;step-2-update-gemfile&quot;&gt;Step 2: Update &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gem &quot;github-pages&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gem &quot;jekyll&quot;&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gem &quot;jekyll&quot;, &quot;~&amp;gt; 3.3.0&quot;&lt;/code&gt;. You’ll need the latest version of Jekyll&lt;sup id=&quot;fnref:update-jekyll&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:update-jekyll&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; for Minimal Mistakes to work and load all of the /assets/ properly.&lt;/p&gt;

&lt;p&gt;Add the Minimal Mistakes theme gem:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;minimal-mistakes-jekyll&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When finished your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; should look something like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://rubygems.org&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;~&amp;gt; 3.3.0&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;minimal-mistakes-jekyll&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3-run-bundler&quot;&gt;Step 3: Run Bundler&lt;/h2&gt;

&lt;p&gt;Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; (or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle update&lt;/code&gt; if you’re updating an existing repo) to install/update Jekyll and the theme.&lt;/p&gt;

&lt;h2 id=&quot;step-4-install-the-theme&quot;&gt;Step 4: Install the Theme&lt;/h2&gt;

&lt;p&gt;Add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;theme: &quot;minimal-mistakes-jekyll&quot;&lt;/code&gt; to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;If you’re migrating from an existing Minimal Mistakes site you shouldn’t have to change anything else after this. If it’s a new site consult then docs to &lt;a href=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/docs/configuration/&quot;&gt;properly config&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;Please Note:&lt;/strong&gt; Paths for image headers, overlays, teasers, &lt;a href=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/docs/helpers/#gallery&quot;&gt;galleries&lt;/a&gt;, and &lt;a href=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/docs/helpers/#feature-row&quot;&gt;feature rows&lt;/a&gt; have changed and now require a full path. Instead of just &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;image: filename.jpg&lt;/code&gt; you’ll need to use the full path eg: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;image: assets/images/filename.jpg&lt;/code&gt;. The preferred location is now &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets/images&lt;/code&gt; but can be placed elsewhere or external hosted. This all applies for image references in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;author.yml&lt;/code&gt; as well.&lt;/p&gt;

&lt;h2 id=&quot;step-5-jekyll-new-tweaks&quot;&gt;Step 5: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll new&lt;/code&gt; Tweaks&lt;/h2&gt;

&lt;p&gt;If this is a new site be sure to add the following files to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/&lt;/code&gt; and customize as you see fit. There is currently no way of bundling them in with the theme, so be sure to consult the docs on how to properly use both.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/blob/master/_data/ui-text.yml&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/ui-text.yml&lt;/code&gt;&lt;/a&gt; - UI text &lt;a href=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/docs/ui-text/&quot;&gt;documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/blob/master/_data/navigation.yml&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/navigation.yml&lt;/code&gt;&lt;/a&gt; - navigation &lt;a href=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/docs/navigation/&quot;&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You’ll also need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;site root&amp;gt;/index.html&lt;/code&gt; with a modified &lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/blob/master/index.html&quot;&gt;Minimal Mistakes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Change &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout: post&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts/0000-00-00-welcome-to-jekyll.markdown&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout: single&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Remove &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;about.md&lt;/code&gt;, or at the very least change &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout: page&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout: single&lt;/code&gt; and remove references to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;icon-github.html&lt;/code&gt; (or &lt;a href=&quot;https://github.com/jekyll/minima/tree/master/_includes&quot;&gt;copy to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes&lt;/code&gt;&lt;/a&gt; if using).&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;That’s it! If all goes well running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt; should spin-up your site. If you encounter any bumps please file an issue on GitHub and make sure to indicate you’re testing the pre-release Ruby gem version.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/issues/new&quot; class=&quot;btn btn--info btn--large&quot;&gt;File an issue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:update-jekyll&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;You could also run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle update jekyll&lt;/code&gt; to update Jekyll. &lt;a href=&quot;#fnref:update-jekyll&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Arturo Pestana</name></author><category term="Jekyll" /><category term="update" /><summary type="html">Hot on the heels of Jekyll v3.3.0 is a beta release of Minimal Mistakes… as a gemified theme.</summary></entry><entry><title type="html">Gemified Theme – Alpha Release</title><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/gemified-theme-alpha/" rel="alternate" type="text/html" title="Gemified Theme – Alpha Release" /><published>2016-09-21T00:00:00-04:00</published><updated>2018-03-20T16:00:58-04:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/gemified-theme-alpha</id><content type="html" xml:base="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/gemified-theme-alpha/">&lt;p&gt;Jekyll &lt;a href=&quot;http://jekyllrb.com/docs/themes/&quot;&gt;themes distributed as Ruby gems&lt;/a&gt; are finally here to make installing and upgrading much easier. Gone are the days of forking a repo just to “install it”. Or dealing with merge conflicts when pulling in upstream commits to “upgrade it”.&lt;/p&gt;

&lt;p&gt;If you’re interested in testing out Minimal Mistakes as a gemified theme read on. There are a few caveats though:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Support for a theme &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets&lt;/code&gt; folder was recently &lt;a href=&quot;https://github.com/jekyll/jekyll/pull/5364&quot;&gt;added to Jekyll core&lt;/a&gt;, but has yet to be released or rolled into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github-pages&lt;/code&gt; gem. Meaning you can’t use Minimal Mistakes as a Ruby gem there just yet… locally served or self-hosted installs should be fine if you don’t mind using a pre-release version of Jekyll.&lt;/li&gt;
  &lt;li&gt;Windows users can’t currently use themes packaged as gems due to a &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/5192&quot;&gt;bug with file paths&lt;/a&gt; in Jekyll core. This is being worked on so hopefully a &lt;a href=&quot;https://github.com/jekyll/jekyll/pull/5256&quot;&gt;fix is on the way&lt;/a&gt; soon.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Fine with all that? Great. Let’s continue.&lt;/p&gt;

&lt;p&gt;If you’re migrating a site already using Minimal Mistakes and haven’t customized any of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_layouts&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_sass&lt;/code&gt; partials, or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets&lt;/code&gt; this should be quick and painless.&lt;/p&gt;

&lt;h2 id=&quot;step-1-remove-theme-files&quot;&gt;Step 1: Remove Theme Files&lt;/h2&gt;

&lt;p&gt;Remove &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_layouts&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_sass&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets&lt;/code&gt; folders and files within. You won’t need these anymore as they’re bundled in the theme.&lt;/p&gt;

&lt;p&gt;If you customized any of these then leave them alone and only remove the untouched ones. If setup correctly your modified versions should act as &lt;a href=&quot;http://jekyllrb.com/docs/themes/#overriding-theme-defaults&quot;&gt;overrides&lt;/a&gt; to the versions bundled with the theme.&lt;/p&gt;

&lt;h2 id=&quot;step-2-update-gemfile&quot;&gt;Step 2: Update &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;In order to test you’ll need to install pre-release gems of Jekyll and Minimal Mistakes.&lt;/p&gt;

&lt;p&gt;Start by replacing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gem &quot;github-pages&quot;&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gem &quot;jekyll&quot;&lt;/code&gt; with the following:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:git&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/jekyll/jekyll.git&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then add the pre-release Minimal Mistakes theme gem:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;minimal-mistakes-jekyll&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:git&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/mmistakes/minimal-mistakes.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:branch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;feature/theme-gem&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When finished your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; should look something like this:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://rubygems.org&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:git&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/jekyll/jekyll.git&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;minimal-mistakes-jekyll&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:git&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/mmistakes/minimal-mistakes.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:branch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;feature/theme-gem&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:jekyll_plugins&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# gem &quot;jekyll-archives&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-paginate&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-sitemap&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-gist&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-feed&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3-run-bundler&quot;&gt;Step 3: Run Bundler&lt;/h2&gt;

&lt;p&gt;Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; (or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle update&lt;/code&gt; if you’re updating an existing repo) to install the pre-release gems.&lt;/p&gt;

&lt;h2 id=&quot;step-4-install-the-theme&quot;&gt;Step 4: Install the Theme&lt;/h2&gt;

&lt;p&gt;Add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;theme: &quot;minimal-mistakes-jekyll&quot;&lt;/code&gt; to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;If you’re migrating from an existing Minimal Mistakes site you shouldn’t have to change anything else after this. If it’s a new site consult then docs to &lt;a href=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/docs/configuration/&quot;&gt;properly config&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;Please Note:&lt;/strong&gt; Paths for image headers, overlays, teasers, &lt;a href=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/docs/helpers/#gallery&quot;&gt;galleries&lt;/a&gt;, and &lt;a href=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/docs/helpers/#feature-row&quot;&gt;feature rows&lt;/a&gt; have changed and now require a full path. Instead of just &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;image: filename.jpg&lt;/code&gt; you’ll need to use the full path eg: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;image: assets/images/filename.jpg&lt;/code&gt;. The preferred location is now &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets/images&lt;/code&gt; but can be placed elsewhere or external hosted. This applies for image references in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;author.yml&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-5-jekyll-new-tweaks&quot;&gt;Step 5: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll new&lt;/code&gt; Tweaks&lt;/h2&gt;

&lt;p&gt;If this is a new site be sure to add the following files to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/&lt;/code&gt; and customize as you see fit. There is currently no way of bundling them in with the theme, so be sure to consult the docs on how to properly use both.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/blob/master/_data/ui-text.yml&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/ui-text.yml&lt;/code&gt;&lt;/a&gt; - UI text &lt;a href=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/docs/ui-text/&quot;&gt;documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/blob/master/_data/navigation.yml&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/navigation.yml&lt;/code&gt;&lt;/a&gt; - navigation &lt;a href=&quot;/intro2sd-arturo-pestana-ortiz-alu0101015293/docs/navigation/&quot;&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You’ll also need to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;site root&amp;gt;/index.html&lt;/code&gt; with a modified &lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/blob/master/index.html&quot;&gt;Minimal Mistakes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.html&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Change &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout: post&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts/0000-00-00-welcome-to-jekyll.markdown&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout: single&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Remove &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;about.md&lt;/code&gt;, or at the very least change &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout: page&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout: single&lt;/code&gt; and remove references to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;icon-github.html&lt;/code&gt; (or &lt;a href=&quot;https://github.com/jekyll/minima/tree/master/_includes&quot;&gt;copy to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes&lt;/code&gt;&lt;/a&gt; if using).&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;That’s it! If all goes well running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt; should spin-up your site. If you encounter any bumps please file an issue on GitHub and make sure to indicate you’re testing the pre-release Ruby gem version.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/issues/new&quot; class=&quot;btn btn--info btn--large&quot;&gt;File an issue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</content><author><name>Arturo Pestana</name></author><category term="Jekyll" /><category term="update" /><summary type="html">Jekyll themes distributed as Ruby gems are finally here to make installing and upgrading much easier. Gone are the days of forking a repo just to “install it”. Or dealing with merge conflicts when pulling in upstream commits to “upgrade it”.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/welcome-to-jekyll/" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2016-02-24T00:00:00-05:00</published><updated>2016-02-24T00:00:00-05:00</updated><id>https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/welcome-to-jekyll</id><content type="html" xml:base="https://mmistakes.github.io/intro2sd-arturo-pestana-ortiz-alu0101015293/jekyll/welcome-to-jekyll/">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Tom&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &apos;Hi, Tom&apos; to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>Arturo Pestana</name></author><category term="Jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>